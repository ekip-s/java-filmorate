drop table if exists friends_list;
drop table if exists likes;
drop table if exists users;
drop table if exists genres_summary_list;
drop table if exists film;
drop table if exists mpa;
drop table if exists genre;




CREATE TABLE genre (
id INTEGER PRIMARY KEY,
name VARCHAR(150) NOT NULL UNIQUE
);

CREATE TABLE mpa (
id INTEGER PRIMARY KEY,
name VARCHAR(150) NOT NULL UNIQUE
);

create table film (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(150) NOT NULL,
description VARCHAR(200) NOT NULL,
releaseDate DATE NOT NULL,
duration INTEGER,
rate INTEGER,
mpa_id INTEGER REFERENCES mpa (id),
CONSTRAINT duration_not_null CHECK (duration > 0),
CONSTRAINT rate_not_null CHECK (rate > -1)
);


CREATE TABLE users (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(150) NOT NULL,
login VARCHAR(150) NOT NULL,
name VARCHAR(150) NOT NULL,
birthday DATE NOT NULL
);

CREATE TABLE likes (
film_id INTEGER REFERENCES film (id),
user_id INTEGER REFERENCES users (id),
PRIMARY KEY (film_id, user_id)
);

CREATE TABLE friends_list (
user_master INTEGER REFERENCES users (id),
user_slave INTEGER REFERENCES users (id),
is_confirmed boolean,
PRIMARY KEY (user_master, user_slave)
);

CREATE TABLE genres_summary_list (
film_id INTEGER REFERENCES film (id),
id INTEGER REFERENCES genre (id),
PRIMARY KEY (film_id, id)
);


